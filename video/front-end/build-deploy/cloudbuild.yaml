steps:
# Build the container image
#- name: 'gcr.io/cloud-builders/docker'
#  args: ['build', '-t', '${_REGION}-docker.pkg.dev/$PROJECT_ID/$_REPO_NAME/$_IMAGE_NAME:$BUILD_ID', '-f', './api-weather/Dockerfile', './api-weather']
#### este funciona  args: ['build', '-t', '${_REGION}-docker.pkg.dev/$PROJECT_ID/$_REPO_NAME/$_IMAGE_NAME:$BUILD_ID', '-f', './api-weather/Dockerfile', './api-weather']
# Push the container image to Container Registry
- name: gcr.io/k8s-skaffold/pack
  entrypoint: pack
  args:
  - build
  - ${_REGION}-docker.pkg.dev/$PROJECT_ID/$_REPO_NAME/$_IMAGE_NAME:$BUILD_ID
  - --builder
  - gcr.io/buildpacks/builder:latest
  - --network
  - cloudbuild
  env:
  - 'GOOGLE_PYTHON_VERSION=3.11.0'


- name: 'gcr.io/cloud-builders/docker'
  args: ['push', '${_REGION}-docker.pkg.dev/$PROJECT_ID/$_REPO_NAME/$_IMAGE_NAME:$BUILD_ID']
# Deploy container image to Cloud Run
##- name: 'gcr.io/cloud-builders/gcloud'
##  args: ['run', 'deploy', 'myservice', '--image', '${_REGION}-docker.pkg.dev/$PROJECT_ID/$_REPO_NAME/${_IMAGE_NAME}:$BUILD_ID', '--region', '${_REGION}', '--platform', 'managed', '--allow-unauthenticated']

- name: gcr.io/google.com/cloudsdktool/cloud-sdk:slim
  dir: "${_SKAFFOLD_DIR}"
  args: 
      [
        "deploy", "releases", "create", "release-$_RELEASE_TIMESTAMP",
        "--delivery-pipeline", "$_PIPELINE_NAME",
        "--region", "${_REGION}",
        "--images", "$_IMAGE_NAME=${_REGION}-docker.pkg.dev/$PROJECT_ID/$_REPO_NAME/$_IMAGE_NAME:$BUILD_ID"
      ]
  entrypoint: gcloud
images:
- ${_REGION}-docker.pkg.dev/$PROJECT_ID/$_REPO_NAME/$_IMAGE_NAME:$BUILD_ID
#- ${_REGION}-docker.pkg.dev/$PROJECT_ID/demos-docker-repo/video_demogenai_job@sha256:2d1c9641d5ab7fbbc442e20d1a1e2b0117688978b8aa0dad5ea6caf7fe066d67